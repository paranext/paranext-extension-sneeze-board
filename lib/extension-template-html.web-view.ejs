<!DOCTYPE html>
<html>
  <head>
    <style>
      .title {
        color: red;
      }
    </style>
  </head>
  <body>
    <div class="title">Extension Template HTML</div>
    <div>
      <input id="greetings-input" value="Bill" /><button
        id="greetings-button"
        type="button"
      >
        Greet
      </button>
    </div>
    <div id="greetings-button-output"></div>
    <div>
      <input
        id="set-greetings-input"
        value="Hey, my name is Bill. I got set by the webview!"
      /><button id="set-greetings-button" type="button">Set Greeting</button>
    </div>
    <div id="all-greetings"></div>
    <div id="any-greetings-update-count">Any Greetings Updates: 0</div>
    <div id="bill-any-greetings-update-count">
      Any Greetings Updates (via Bill): 0
    </div>
    <div id="bill-greetings-update-count">Bill Greetings Updates: 0</div>
    <script>
      function print(input) {
        papi.logger.info(input);
      }

      const dataProviderPromise = papi.dataProvider.get(
        "hello-someone.greetings"
      );

      async function setupWebView() {
        const greetingsDataProvider =
          await dataProviderPromise;

        // Attach handler for greetings-button
        const greetingsButton = document.getElementById("greetings-button");
        greetingsButton.addEventListener("click", async () => {
          const greetingsInput = document.getElementById("greetings-input");
          const greeting = await greetingsDataProvider.get(
            greetingsInput.value.toLowerCase()
          );
          const helloSomeoneOutput = document.getElementById(
            "greetings-button-output"
          );
          helloSomeoneOutput.innerHTML = greeting;
          print(greeting);
        });
        greetingsButton.addEventListener("contextmenu", async (e) => {
          e.preventDefault();
          const greetingsInput = document.getElementById("greetings-input");
          const name = greetingsInput.value.toLowerCase();
          const promises = new Array(10000);
          for (let i = 0; i < 10000; i += 1)
            promises[i] = greetingsDataProvider.get(name);
          await Promise.all(promises);
          print("Done");
        });

        // Attach handler for set-greetings-button
        const setGreetingsButton = document.getElementById(
          "set-greetings-button"
        );
        setGreetingsButton.addEventListener("click", async () => {
          const greetingsInput = document.getElementById("greetings-input");
          const name = greetingsInput.value;
          const setGreetingsInput = document.getElementById(
            "set-greetings-input"
          );
          const success = await greetingsDataProvider.set(
            name.toLowerCase(),
            setGreetingsInput.value
          );
          const helloSomeoneOutput = document.getElementById(
            "greetings-button-output"
          );
          helloSomeoneOutput.innerHTML = `${
            success ? "Successfully" : "Unsuccessfully"
          } set ${name}'s greeting!`;
        });

        // Update the 'all greetings' display on load and on greetings updates
        greetingsDataProvider.subscribe("*", (greetings) => {
          const allGreetings = document.getElementById("all-greetings");
          const greetingsString = JSON.stringify(greetings, null, 2);
          allGreetings.innerHTML = greetingsString;
          print(greetingsString);
        });

        // Update the greetings count on any greeting update
        let anyGreetingsUpdateCount = 0;
        greetingsDataProvider.subscribe(
          "*",
          () => {
            anyGreetingsUpdateCount += 1;
            const anyGreetingsUpdateCountDiv = document.getElementById(
              "any-greetings-update-count"
            );
            anyGreetingsUpdateCountDiv.innerHTML = `Any Greetings Updates: ${anyGreetingsUpdateCount}`;
          },
          { retrieveDataImmediately: false }
        );

        // Update the greetings count on greetings updates
        let billAnyGreetingsUpdateCount = 0;
        greetingsDataProvider.subscribe(
          "BiLl",
          () => {
            billAnyGreetingsUpdateCount += 1;
            const billAnyGreetingsUpdateCountDiv = document.getElementById(
              "bill-any-greetings-update-count"
            );
            billAnyGreetingsUpdateCountDiv.innerHTML = `Any Greetings Updates (via Bill): ${billAnyGreetingsUpdateCount}`;
          },
          { retrieveDataImmediately: false, whichUpdates: "all" }
        );

        // Update the greetings count on greetings updates
        let billGreetingsUpdateCount = -1;
        greetingsDataProvider.subscribe("bIlL", () => {
          billGreetingsUpdateCount += 1;
          const billGreetingsUpdateCountDiv = document.getElementById(
            "bill-greetings-update-count"
          );
          billGreetingsUpdateCountDiv.innerHTML = `Bill Greetings Updates: ${billGreetingsUpdateCount}`;
        });
      }

      if (document.readyState === "loading")
        document.addEventListener("DOMContentLoaded", setupWebView);
      else setupWebView();

      //# sourceURL=extension-template-html.web-view.js
    </script>
  </body>
</html>
